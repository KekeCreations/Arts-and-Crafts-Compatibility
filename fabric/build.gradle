plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom'
}
base {
    archivesName = "${mod_id}-fabric-${minecraft_version}"
}
dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation "curse.maven:artsandcrafts-1034791:5829181"
    include implementation("blue.endless:jankson:${jankson_version}")
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":common")

    //Gotta keep
    modImplementation "curse.maven:decorative-blocks-362528:5089408"
    modImplementation "curse.maven:ecologics-570463:4857271"
    modImplementation "curse.maven:cloth-config-348521:4973440"
    modImplementation "curse.maven:dramatic-doors-380617:5476685"
    modImplementation "curse.maven:excessive-building-845097:5765499"
    modImplementation "curse.maven:forge-config-api-port-fabric-547434:4583000"
    modImplementation "curse.maven:el-and-ls-dyes-1122454:5816277"
    modImplementation "curse.maven:geckolib-388172:5675212"
    modImplementation("net.fabricmc:fabric-language-kotlin:1.12.3+kotlin.2.0.21")
    modImplementation ("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}")
    modImplementation "org.jetbrains.kotlin:kotlin-reflect:2.0.21"
    implementation("com.eliotlash.mclib:mclib:${mclib_version}")

    //so dye mod doesn't crash
    // REI
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-api-fabric:$rei_version")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:$rei_version")
    //BetterEnd
    modCompileOnly("maven.modrinth:gc8OEnCC:${betterend_version}")
    modCompileOnly("com.github.quiqueck:BCLib:${bclib_version}")
    modCompileOnly("com.github.quiqueck:WunderLib:${wunderlib_version}")
    // Botania  	// this doesn't run here with modImpl but it does run in prod. So I'm chill with it.
    modCompileOnly("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cca_version}")
    modCompileOnly("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cca_version}")
    modCompileOnly("maven.modrinth:trinkets:${trinkets_version}")
    modCompileOnly("me.zeroeightsix:fiber:${fiber_version}")
    modCompileOnly("com.github.emilyploszaj:step-height-entity-attribute:${step_height_version}")
    modCompileOnly("maven.modrinth:patchouli:${patchouli_version}")
    modCompileOnly("maven.modrinth:botania:${botania_version}")
    // Create - dependencies are added transitively
    modCompileOnly("com.simibubi.create:create-fabric-${minecraft_version}:${create_version}")
    include(modImplementation('com.github.Chocohead:Fabric-ASM:v2.3'))
    //-----------------------------------

    //Optional
    modImplementation "curse.maven:gilded-sherds-935749:4975224"
    modImplementation "curse.maven:oh-my-sherd-897227:4864086"
    modImplementation "curse.maven:built-982827:5398960"
    modImplementation "curse.maven:twigs-496913:4603805"
    modImplementation "curse.maven:yapping-tooltips-1059597:5537445"
    modImplementation "curse.maven:dwdsb-865592:5024948"
    modImplementation "curse.maven:more-pottery-sherd-909168:4733638"
    modImplementation "curse.maven:sherdsapi-847583:4931973"
    //modImplementation "curse.maven:cobblemon-687131:5375408"
}

loom {
    if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
        datagen {
            inherit client
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("../common/src/main/generated/")}"
            vmArg "-Dfabric-api.datagen.modid=arts_and_crafts_compat"

            runDir "build/datagen"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    source(project(":common").sourceSets.main.allJava)
}
tasks.named("sourcesJar", Jar) {
    from(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
